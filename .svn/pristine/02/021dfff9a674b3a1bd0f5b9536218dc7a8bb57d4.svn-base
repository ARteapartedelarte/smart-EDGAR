package ch.pschatzmann.edgar.table;

import ch.pschatzmann.common.table.IFormulas;
import ch.pschatzmann.common.table.TableCalculated;
import ch.pschatzmann.edgar.reporting.marketshare.MarketShare;

/**
 * Supported Custom Math functions
 * 
 * @author pschatzmann
 *
 */
public class Formulas extends ch.pschatzmann.common.table.Formulas implements IFormulas {
	private Forecast forecast = null;
	private static MarketShare marketShare = null;

	public Formulas() {
	}

	private Formulas(TableCalculated table, int row) {
		super(table, row);
	}

	public Number forecast(String parName) {
		return forecast(parName, false);
	}

	public Number forecast(String parName, boolean seasonWithRegression) {
		if (forecast == null) {
			forecast = new Forecast(this.getTable(), seasonWithRegression);
		}
		return forecast.forecast(parName, super.row());
	}

	public Number surprisePercent(String parName) {
		return surprisePercent(parName, false);
	}

	public Number surprisePercent(String parName, boolean seasonWithRegression) {
		Number result = null;
		try {
			Number forecast = forecast(parName, seasonWithRegression);
			if (forecast != null) {
				double forecastDouble = forecast.doubleValue();
				result = (value(parName).doubleValue() - forecastDouble) / forecastDouble * 100;
			}
		} catch (Exception e) {
		}
		return result;
	}

	public Number marketShare()  {
		Number result = null;
		try {
			if (marketShare == null) {
				marketShare = new MarketShare();
			}
			String companyNr = this.getTable().getRowValue(this.row(),"identifier");
			String year = this.getTable().getRowValue(this.row(),"date").substring(0, 4);
			result = marketShare.getMarketShare(companyNr, year);
		} catch(Exception ex) {};
		return result;
	}

}