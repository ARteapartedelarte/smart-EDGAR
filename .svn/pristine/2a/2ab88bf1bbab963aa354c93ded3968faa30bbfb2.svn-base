package ch.pschatzmann.edgar.reporting.company;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.OptionalDouble;
import java.util.Set;
import java.util.TreeSet;
import java.util.function.BiFunction;
import java.util.stream.Collectors;

import ch.pschatzmann.common.table.ITable;

/**
 * Returns all 10-K entries for 12 months or 0 months. We need to filter out all
 * balance sheet values which have been reported by 10-K for the quarters
 * because we just want to have the end of year values
 * 
 * @author pschatzmann
 *
 */
public class FilterYearly implements BiFunction<ITable, Integer, Boolean> {
	private List<Map<String, ?>> list;
	private PeriodsDetermination periods;
	
	public FilterYearly() {
	}

	@Override
	public Boolean apply(ITable table, Integer row) {
		setup(table);
		Map<String,?> record = list.get(row);
		return periods.isValidYearly(record.get("date").toString(), record.get("form").toString(), record.get("numberOfMonths").toString());
	}

	protected void setup(ITable table) {
		if (this.list != table) {
			this.list = table.toList();
			periods = new PeriodsDetermination(table);
		}
	}


}
